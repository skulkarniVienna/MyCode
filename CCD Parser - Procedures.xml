<channel version="3.12.0">
  <id>efd79df6-4275-42e1-b342-4c186eb0dccc</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>CCD Parser - Procedures</name>
  <description></description>
  <revision>14</revision>
  <sourceConnector version="3.12.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.12.0">
      <pluginProperties/>
      <sourceConnectorProperties version="3.12.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.12.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.12.0">
          <name>Procedures</name>
          <sequenceNumber>0</sequenceNumber>
          <enabled>true</enabled>
          <script>var procedureSection = sourceMap.get(&apos;procedureSection&apos;);
var _procedureText = sourceMap.get(&apos;procedureText&apos;);



var section = {};
if(procedureSection != null) {
    section.Code = GetCE(procedureSection.getCode());
    section.Title = GetST(procedureSection.getTitle());

    var _entries = procedureSection.getEntries();
    var entries = [];
    if(_entries != null) {
        var _entriesSize = _entries.size();
        var _i = 0;
        if(_entriesSize &gt; 0) {
            for(_i = 0;_i &lt; _entriesSize ; _i++) {
            var entry = {};
            var _entry = _entries.get(_i);

                if(_entry != null) 
                {
                    var act = {};
                    var _act = _entry.getAct();
                    if(_act != null) {
                        act.Ids = GetIIList(_act.getIds());
                        act.Code = GetCD(_act.getCode());

                        if(act.Code.OriginalText!=null)
                        {
                            if(act.Code.OriginalText.Reference.TEL_URL != null &amp;&amp; act.Code.OriginalText.Reference.TEL_URL != undefined){
                                var _referenceValueForCode = act.Code.OriginalText.Reference.TEL_URL.Value;
                                act.Code.OriginalText.Reference.TEL_URL.Value = GetValuebyId(_procedureText,_referenceValueForCode);
                                
                            }
                        }

                        act.EffectiveTime = GetIVL_TS(_act.getEffectiveTime());
                        act.StatusCode = GetCS(_act.getStatusCode());
                        act.PriorityCode = GetCE(_act.getPriorityCode());
                        act.Authors = GetAuthorList(_act.getAuthors());
                        act.Participants = GetParticipant2List(_act.getParticipants());
                        act.Performers = GetPerformer2List(_act.getPerformers());
                        act.Informants = GetInformant12List(_act.getInformants());
                        
                        var _entryrelationships = _act.getEntryRelationships();
                        var entryrelationships = [];
                        if(_entryrelationships != null) 
                        {
                            var _entryrelationshipsSize = _entryrelationships.size();
                            
                            var _entryRelationshipCount = 0;
                            for(_entryRelationshipCount = 0;_entryRelationshipCount &lt; _entryrelationshipsSize ; _entryRelationshipCount++) 
                            {
                                var entryrelationship = {};
                                var _entryrelationship = _entryrelationships.get(_entryRelationshipCount);
                            var _entryrelationshipObservation = _entryrelationship.getObservation();
                            if(_entryrelationshipObservation != null) {
                                var entryrelationshipObservation = {};
                                entryrelationshipObservation.TemplateIds = GetIIList(_entryrelationshipObservation.getTemplateIds());
                                entryrelationshipObservation.Code = GetCE(_entryrelationshipObservation.getCode());
                                entryrelationshipObservation.Values = GetAnyList(_entryrelationshipObservation.getValues());
                                
                                var _entryrelationshipObservationentryrelationships = _entryrelationshipObservation.getEntryRelationships();
                                        var EntryrelationshipObservationentryrelationships = [];

                                        if (_entryrelationshipObservationentryrelationships != null) {
                                        var _entryrelationshipObservationentryrelationshipsSize = _entryrelationshipObservationentryrelationships.size();
                                    var _count = 0;
                                            for (_count = 0; _count &lt; _entryrelationshipObservationentryrelationshipsSize; _count++) {
                                        var EntryrelationshipObservationentryrelationship = {};
                                        var _entryrelationshipObservationentryrelationship = _entryrelationshipObservationentryrelationships.get(_count);
                                        var _entryrelationshipObservationentryrelationshipObservation = _entryrelationshipObservationentryrelationship.getObservation();
                                        if (_entryrelationshipObservationentryrelationshipObservation != null) {
                                            var EntryrelationshipObservationentryrelationshipObservation = {};
                                            EntryrelationshipObservationentryrelationshipObservation.TemplateIds = GetIIList(_entryrelationshipObservationentryrelationshipObservation.getTemplateIds());
                                            EntryrelationshipObservationentryrelationshipObservation.Values = GetAnyList(_entryrelationshipObservationentryrelationshipObservation.getValues());
                                            EntryrelationshipObservationentryrelationshipObservation.Code = GetCE(_entryrelationshipObservationentryrelationshipObservation.getCode());
                                                            
                                            EntryrelationshipObservationentryrelationship.Observation = EntryrelationshipObservationentryrelationshipObservation;
                                        }
                                        EntryrelationshipObservationentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipObservationentryrelationships.getTypeCode());
                                        EntryrelationshipObservationentryrelationships.push(EntryrelationshipObservationentryrelationship);
                                            }
                                        }
                                                
                                entryrelationshipObservation.EntryRelationships = EntryrelationshipObservationentryrelationships;
                                entryrelationship.Observation = entryrelationshipObservation;
                                }

                                var _entryrelationshipEncounter = _entryrelationship.getEncounter();
                                if(_entryrelationshipEncounter != null) {
                                var entryrelationshipEncounter = {};
                                entryrelationshipEncounter.Ids = GetIIList(_entryrelationshipEncounter.getIds());
                                entryrelationshipEncounter.Code = GetCE(_entryrelationshipEncounter.getCode());
                                
                                var _entryrelationshipEncounterentryrelationships = _entryrelationshipEncounter.getEntryRelationships();
                                        var EntryrelationshipEncounterentryrelationships = [];

                                        if (_entryrelationshipEncounterentryrelationships != null) {
                                        var _entryrelationshipEncounterentryrelationshipsSize = _entryrelationshipEncounterentryrelationships.size();
                                    var _count = 0;
                                            for (_count = 0; _count &lt; _entryrelationshipEncounterentryrelationshipsSize; _count++) {
                                        var EntryrelationshipEncounterentryrelationship = {};
                                        var _entryrelationshipEncounterentryrelationship = _entryrelationshipEncounterentryrelationships.get(_count);
                                        var _entryrelationshipEncounterentryrelationshipEncounter = _entryrelationshipEncounterentryrelationship.getEncounter();
                                        if (_entryrelationshipEncounterentryrelationshipEncounter != null) {
                                            var EntryrelationshipEncounterentryrelationshipEncounter = {};
                                            EntryrelationshipEncounterentryrelationshipEncounter.TemplateIds = GetIIList(_entryrelationshipEncounterentryrelationshipEncounter.getTemplateIds());
                                            EntryrelationshipEncounterentryrelationshipEncounter.Ids = GetIIList(_entryrelationshipEncounterentryrelationshipEncounter.getIds());
                                            EntryrelationshipEncounterentryrelationshipEncounter.Code = GetCE(_entryrelationshipEncounterentryrelationshipEncounter.getCode());
                                                            
                                            EntryrelationshipEncounterentryrelationship.Encounter = EntryrelationshipEncounterentryrelationshipEncounter;
                                        }
                                        EntryrelationshipEncounterentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipObservationentryrelationships.getTypeCode());
                                        EntryrelationshipEncounterentryrelationships.push(EntryrelationshipEncounterentryrelationship);
                                            }
                                        }
                                                
                                    entryrelationshipEncounter.EntryRelationships = EntryrelationshipEncounterentryrelationships;
                                    entryrelationship.Encounter = entryrelationshipEncounter;
                                }
                                
                                var _entryrelationshipAct = _entryrelationship.getAct();
                                if(_entryrelationshipAct != null) {
                                var entryrelationshipAct = {};
                                entryrelationshipAct.TemplateIds = GetIIList(_entryrelationshipAct.getTemplateIds());
                                entryrelationshipAct.Ids = GetIIList(_entryrelationshipAct.getIds());
                                entryrelationshipAct.Code = GetCE(_entryrelationshipAct.getCode());
                                entryrelationshipAct.Text = GetED(_entryrelationshipAct.getText());

                                if(entryrelationshipAct.Text.Reference!=null)
                                {
                                    if(entryrelationshipAct.Text.Reference.TEL_URL != null &amp;&amp; entryrelationshipAct.Text.Reference.TEL_URL != undefined){
                                        var _referenceValueForCode = entryrelationshipAct.Text.Reference.TEL_URL.Value;
                                        entryrelationshipAct.Text.Reference.TEL_URL.Value = GetValuebyId(_procedureText,_referenceValueForCode);
                                        if(entryrelationshipAct.Text==&apos;&apos; || entryrelationshipAct.Text== null)
                                        {
                                            entryrelationshipAct.Text=entryrelationshipAct.Text.Reference.TEL_URL.Value
                                        }
                                    }
                                }
                                
                                var _entryrelationshipActentryrelationships = _entryrelationshipAct.getEntryRelationships();
                                        var EntryrelationshipActentryrelationships = [];

                                        if (_entryrelationshipActentryrelationships != null) {
                                        var _entryrelationshipActentryrelationshipsSize = _entryrelationshipActentryrelationships.size();
                                    var _count = 0;
                                            for (_count = 0; _count &lt; _entryrelationshipActentryrelationshipsSize; _count++) {
                                        var EntryrelationshipActentryrelationship = {};
                                        var _entryrelationshipActentryrelationship = _entryrelationshipActentryrelationships.get(_count);
                                        var _entryrelationshipActentryrelationshipAct = _entryrelationshipActentryrelationship.getAct();
                                        if (_entryrelationshipActentryrelationshipAct != null) {
                                            var EntryrelationshipActentryrelationshipAct = {};
                                            EntryrelationshipActentryrelationshipAct.TemplateIds = GetIIList(_entryrelationshipActentryrelationshipAct.getTemplateIds());
                                            EntryrelationshipActentryrelationshipAct.Ids = GetIIList(_entryrelationshipActentryrelationshipAct.getIds());
                                            EntryrelationshipActentryrelationshipAct.Code = GetCE(_entryrelationshipActentryrelationshipAct.getCode());
                                            EntryrelationshipActentryrelationshipAct.Text = GetED(_entryrelationshipActentryrelationshipAct.getText());
                                                            
                                            EntryrelationshipActentryrelationship.Act = EntryrelationshipActentryrelationshipAct;
                                        }
                                        EntryrelationshipActentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipObservationentryrelationships.getTypeCode());
                                        EntryrelationshipActentryrelationships.push(EntryrelationshipActentryrelationship);
                                            }
                                        }
                                                
                                entryrelationshipAct.EntryRelationships = EntryrelationshipActentryrelationships;
                                entryrelationship.Act = entryrelationshipAct;
                                }
                                            
                                entryrelationship.TypeCode = GetVocabInfo(_entryrelationship.getTypeCode());
                                entryrelationships.push(entryrelationship);
                                    }
                        }

                                act.EntryRelationships = entryrelationships;
                    }
                    entry.Act = act;    
                    
                    var observation = {};
                    var _observation = _entry.getObservation();
                    if(_observation != null){
                                    observation.TemplateIds = GetIIList(_observation.getTemplateIds());
                                    observation.Ids = GetIIList(_observation.getIds());
                                    observation.Code = GetCD(_observation.getCode());
                                    if(observation.Code.OriginalText.Reference.TEL_URL != null &amp;&amp; observation.Code.OriginalText.Reference.TEL_URL != undefined){
                                        var _referenceValueForCode = observation.Code.OriginalText.Reference.TEL_URL.Value;
                                        observation.Code.OriginalText.Reference.TEL_URL.Value = GetValuebyId(_procedureText,_referenceValueForCode);
                                    }

                                    observation.Authors = GetAuthorList(_observation.getAuthors());
                                    observation.PriorityCode = GetCE(_observation.getPriorityCode());
                                    observation.MethodCodes = GetCEList(_observation.getMethodCodes());
                                    observation.Values = GetAnyList(_observation.getValues());
                                    observation.TargetSiteCodes = GetCDList(_observation.getTargetSiteCodes());
                                    observation.StatusCode = GetCS(_observation.getStatusCode());
                                    observation.EffectiveTime = GetIVL_TS(_observation.getEffectiveTime());
                                    observation.Participants = GetParticipant2List(_observation.getParticipants());
                                    observation.Performers = GetPerformer2List(_observation.getPerformers());
                                    observation.Informants = GetInformant12List(_observation.getInformants());
                                    
                                    var _entryrelationships = _observation.getEntryRelationships();
                                    var entryrelationships = [];
                                    if(_entryrelationships != null) {
                                        var _entryrelationshipsSize = _entryrelationships.size();
                            
                                        var _entryRelationshipCount = 0;
                                        for(_entryRelationshipCount = 0;_entryRelationshipCount &lt; _entryrelationshipsSize ; _entryRelationshipCount++) {
                                            var entryrelationship = {};
                                            var _entryrelationship = _entryrelationships.get(_entryRelationshipCount);
                                            var _entryrelationshipObservation = _entryrelationship.getObservation();
                                            if(_entryrelationshipObservation != null) {
                                                var entryrelationshipObservation = {};
                                                entryrelationshipObservation.TemplateIds = GetIIList(_entryrelationshipObservation.getTemplateIds());
                                                entryrelationshipObservation.Ids = GetIIList(_entryrelationshipObservation.getIds());
                                                entryrelationshipObservation.Code = GetCE(_entryrelationshipObservation.getCode());
                                                entryrelationshipObservation.Values = GetAnyList(_entryrelationshipObservation.getValues());
                                                entryrelationshipObservation.StatusCode = GetCS(_entryrelationshipObservation.getStatusCode());
                                                entryrelationshipObservation.EffectiveTime = GetIVL_TS(_entryrelationshipObservation.getEffectiveTime());

                                                var _entryrelationshipObservationentryrelationships = _entryrelationshipObservation.getEntryRelationships();
                                                var EntryrelationshipObservationentryrelationships = [];

                                                if (_entryrelationshipObservationentryrelationships != null) {
                                                    var _entryrelationshipObservationentryrelationshipsSize = _entryrelationshipObservationentryrelationships.size();
                                                    var _count = 0;
                                                    for (_count = 0; _count &lt; _entryrelationshipObservationentryrelationshipsSize; _count++) {
                                                        var EntryrelationshipObservationentryrelationship = {};
                                                        var _entryrelationshipObservationentryrelationship = _entryrelationshipObservationentryrelationships.get(_count);
                                                        var _entryrelationshipObservationentryrelationshipObservation = _entryrelationshipObservationentryrelationship.getObservation();
                                                        if (_entryrelationshipObservationentryrelationshipObservation != null) {
                                                            var EntryrelationshipObservationentryrelationshipObservation = {};
                                                            EntryrelationshipObservationentryrelationshipObservation.TemplateIds = GetIIList(_entryrelationshipObservationentryrelationshipObservation.getTemplateIds());
                                                            EntryrelationshipObservationentryrelationshipObservation.Ids = GetIIList(_entryrelationshipObservationentryrelationshipObservation.getIds());
                                                            EntryrelationshipObservationentryrelationshipObservation.Values = GetAnyList(_entryrelationshipObservationentryrelationshipObservation.getValues());
                                                            EntryrelationshipObservationentryrelationshipObservation.Authors  = GetAuthorList(_entryrelationshipObservationentryrelationshipObservation.getAuthors());
                                                            EntryrelationshipObservationentryrelationshipObservation.Code = GetCE(_entryrelationshipObservationentryrelationshipObservation.getCode());
                                                            EntryrelationshipObservationentryrelationshipObservation.EffectiveTime = GetIVL_TS(_entryrelationshipObservationentryrelationshipObservation.getEffectiveTime());
                                                            EntryrelationshipObservationentryrelationshipObservation.ClassCode = GetVocabInfo(_entryrelationshipObservationentryrelationshipObservation.getClassCode());
                                                            EntryrelationshipObservationentryrelationshipObservation.MoodCode = GetVocabInfo(_entryrelationshipObservationentryrelationshipObservation.getMoodCode());
                
                                                            EntryrelationshipObservationentryrelationship.Observation = EntryrelationshipObservationentryrelationshipObservation;
                                                            }
                                                            EntryrelationshipObservationentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipObservationentryrelationships.getTypeCode());
                                                            EntryrelationshipObservationentryrelationships.push(EntryrelationshipObservationentryrelationship);
                                                    }
                                                }
                                                        entryrelationshipObservation.EntryRelationships = EntryrelationshipObservationentryrelationships;
                                                entryrelationship.Observation = entryrelationshipObservation;
                                            }

                                            var _entryrelationshipEncounter = _entryrelationship.getEncounter();
                                            if(_entryrelationshipEncounter != null) {
                                                var entryrelationshipEncounter = {};
                                                entryrelationshipEncounter.Ids = GetIIList(_entryrelationshipEncounter.getIds());
                                                entryrelationshipEncounter.Code = GetCE(_entryrelationshipEncounter.getCode());
                                                
                                                var _entryrelationshipEncounterentryrelationships = _entryrelationshipEncounter.getEntryRelationships();
                                                var EntryrelationshipEncounterentryrelationships = [];

                                                if (_entryrelationshipEncounterentryrelationships != null) {
                                                    var _entryrelationshipEncounterentryrelationshipsSize = _entryrelationshipEncounterentryrelationships.size();
                                                    var _count = 0;
                                                    for (_count = 0; _count &lt; _entryrelationshipEncounterentryrelationshipsSize; _count++) {
                                                        var EntryrelationshipEncounterentryrelationship = {};
                                                        var _entryrelationshipEncounterentryrelationship = _entryrelationshipEncounterentryrelationships.get(_count);
                                                        var _entryrelationshipEncounterentryrelationshipEncounter = _entryrelationshipEncounterentryrelationship.getEncounter();
                                                        if (_entryrelationshipEncounterentryrelationshipEncounter != null) {
                                                            var EntryrelationshipEncounterentryrelationshipEncounter = {};
                                                            EntryrelationshipEncounterentryrelationshipEncounter.Ids = GetIIList(_entryrelationshipEncounterentryrelationshipEncounter.getIds());
                                                            EntryrelationshipEncounterentryrelationshipEncounter.Values = GetAnyList(_entryrelationshipEncounterentryrelationshipEncounter.getValues());
                                                            EntryrelationshipEncounterentryrelationshipEncounter.ClassCode = GetVocabInfo(_entryrelationshipEncounterentryrelationshipEncounter.getClassCode());
                                                            EntryrelationshipEncounterentryrelationshipEncounter.MoodCode = GetVocabInfo(_entryrelationshipEncounterentryrelationshipEncounter.getMoodCode());
                
                                                            EntryrelationshipEncounterentryrelationship.Encounter = EntryrelationshipEncounterentryrelationshipEncounter;
                                                            }
                                                            EntryrelationshipEncounterentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipEncounterentryrelationships.getTypeCode());
                                                            EntryrelationshipEncounterentryrelationships.push(EntryrelationshipEncounterentryrelationship);
                                                    }
                                                }
                                                        entryrelationshipEncounter.EntryRelationships = EntryrelationshipEncounterentryrelationships;
                                                entryrelationship.Encounter = entryrelationshipEncounter;
                                            }

                                            
                                            var _entryrelationshipAct = _entryrelationship.getAct();
                                            if(_entryrelationshipAct != null) {
                                                var entryrelationshipAct = {};
                                                entryrelationshipAct.Ids = GetIIList(_entryrelationshipAct.getIds());
                                                entryrelationshipAct.Code = GetCE(_entryrelationshipAct.getCode());
                                                entryrelationshipAct.Text = GetED(_entryrelationshipAct.getText());
                                                
                                                var _entryrelationshipActentryrelationships = _entryrelationshipAct.getEntryRelationships();
                                                var EntryrelationshipActentryrelationships = [];

                                                if (_entryrelationshipActentryrelationships != null) {
                                                    var _entryrelationshipActentryrelationshipsSize = _entryrelationshipActentryrelationships.size();
                                                    var _count = 0;
                                                    for (_count = 0; _count &lt; _entryrelationshipActentryrelationshipsSize; _count++) {
                                                        var EntryrelationshipActentryrelationship = {};
                                                        var _entryrelationshipActentryrelationship = _entryrelationshipActentryrelationships.get(_count);
                                                        var _entryrelationshipActentryrelationshipAct = _entryrelationshipActentryrelationship.getAct();
                                                        if (_entryrelationshipActentryrelationshipAct != null) {
                                                            var EntryrelationshipActentryrelationshipAct = {};
                                                            EntryrelationshipActentryrelationshipAct.TemplateIds = GetIIList(_entryrelationshipActentryrelationshipAct.getTemplateIds());
                                                            EntryrelationshipActentryrelationshipAct.Ids = GetIIList(_entryrelationshipActentryrelationshipAct.getIds());
                                                            EntryrelationshipActentryrelationshipAct.Text = GetED(_entryrelationshipActentryrelationshipAct.getText());
                                                            EntryrelationshipActentryrelationshipAct.ClassCode = GetVocabInfo(_entryrelationshipActentryrelationshipAct.getClassCode());
                                                            EntryrelationshipActentryrelationshipAct.MoodCode = GetVocabInfo(_entryrelationshipActentryrelationshipAct.getMoodCode());
                
                                                            EntryrelationshipActentryrelationship.Act = EntryrelationshipActentryrelationshipAct;
                                                            }
                                                            EntryrelationshipActentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipActentryrelationships.getTypeCode());
                                                            EntryrelationshipActentryrelationships.push(EntryrelationshipActentryrelationship);
                                                    }
                                                }
                                                        entryrelationshipAct.EntryRelationships = EntryrelationshipActentryrelationships;
                                                entryrelationship.Act = entryrelationshipAct;
                                            }

                                            
                                            entryrelationship.TypeCode = GetVocabInfo(_entryrelationship.getTypeCode());
                                            entryrelationships.push(entryrelationship);
                                        }
                                    }

                                    observation.EntryRelationships = entryrelationships;
                    }
                    
                    entry.Observation = observation;

                    var procedure = {};
                    var _procedure = _entry.getProcedure();
                    if(_procedure != null){
                                    procedure.Ids = GetIIList(_procedure.getIds());
                                    procedure.Code = GetCD(_procedure.getCode());

                                    if(procedure.Code.OriginalText.Reference.TEL_URL != null &amp;&amp; procedure.Code.OriginalText.Reference.TEL_URL != undefined){
                                        var _referenceValueForCode = procedure.Code.OriginalText.Reference.TEL_URL.Value;
                                        procedure.Code.OriginalText.Reference.TEL_URL.Value = GetValuebyId(_procedureText,_referenceValueForCode);
                                    }

                                    procedure.StatusCode = GetCS(_procedure.getStatusCode());
                                    procedure.EffectiveTime = GetIVL_TS(_procedure.getEffectiveTime());
                                    procedure.TargetSiteCodes = GetCDList(_procedure.getTargetSiteCodes());
                                    procedure.PriorityCode = GetCE(_procedure.getPriorityCode());
                                    procedure.MethodCodes = GetCEList(_procedure.getMethodCodes());
                                    procedure.Authors = GetAuthorList(_procedure.getAuthors());
                                    procedure.Participants = GetParticipant2List(_procedure.getParticipants());
                                    procedure.Specimens = GetSpecimenList(_procedure.getSpecimens());
                                    procedure.Performers = GetPerformer2List(_procedure.getPerformers());
                                    procedure.Informants = GetInformant12List(_procedure.getInformants());
                                    
                                    var _entryrelationships = _procedure.getEntryRelationships();
                                    var entryrelationships = [];
                                    if(_entryrelationships != null) {
                                        var _entryrelationshipsSize = _entryrelationships.size();
                            
                                        var _entryRelationshipCount = 0;
                                        for(_entryRelationshipCount = 0;_entryRelationshipCount &lt; _entryrelationshipsSize ; _entryRelationshipCount++) {
                                            var entryrelationship = {};
                                            var _entryrelationship = _entryrelationships.get(_entryRelationshipCount);
                                            var _entryrelationshipObservation = _entryrelationship.getObservation();
                                            if(_entryrelationshipObservation != null) {
                                                var entryrelationshipObservation = {};
                                                entryrelationshipObservation.TemplateIds = GetIIList(_entryrelationshipObservation.getTemplateIds());
                                                entryrelationshipObservation.Ids = GetIIList(_entryrelationshipObservation.getIds());
                                                entryrelationshipObservation.Code = GetCE(_entryrelationshipObservation.getCode());
                                                entryrelationshipObservation.Values = GetAnyList(_entryrelationshipObservation.getValues());
                                                entryrelationshipObservation.StatusCode = GetCS(_entryrelationshipObservation.getStatusCode());
                                                entryrelationshipObservation.EffectiveTime = GetIVL_TS(_entryrelationshipObservation.getEffectiveTime());

                                                var _entryrelationshipObservationentryrelationships = _entryrelationshipObservation.getEntryRelationships();
                                                var EntryrelationshipObservationentryrelationships = [];

                                                if (_entryrelationshipObservationentryrelationships != null) {
                                                    var _entryrelationshipObservationentryrelationshipsSize = _entryrelationshipObservationentryrelationships.size();
                                                    var _count = 0;
                                                    for (_count = 0; _count &lt; _entryrelationshipObservationentryrelationshipsSize; _count++) {
                                                        var EntryrelationshipObservationentryrelationship = {};
                                                        var _entryrelationshipObservationentryrelationship = _entryrelationshipObservationentryrelationships.get(_count);
                                                        var _entryrelationshipObservationentryrelationshipObservation = _entryrelationshipObservationentryrelationship.getObservation();
                                                        if (_entryrelationshipObservationentryrelationshipObservation != null) {
                                                            var EntryrelationshipObservationentryrelationshipObservation = {};
                                                            EntryrelationshipObservationentryrelationshipObservation.TemplateIds = GetIIList(_entryrelationshipObservationentryrelationshipObservation.getTemplateIds());
                                                            EntryrelationshipObservationentryrelationshipObservation.Ids = GetIIList(_entryrelationshipObservationentryrelationshipObservation.getIds());
                                                            EntryrelationshipObservationentryrelationshipObservation.Values = GetAnyList(_entryrelationshipObservationentryrelationshipObservation.getValues());
                                                            EntryrelationshipObservationentryrelationshipObservation.Authors  = GetAuthorList(_entryrelationshipObservationentryrelationshipObservation.getAuthors());
                                                            EntryrelationshipObservationentryrelationshipObservation.Code = GetCE(_entryrelationshipObservationentryrelationshipObservation.getCode());
                                                            EntryrelationshipObservationentryrelationshipObservation.EffectiveTime = GetIVL_TS(_entryrelationshipObservationentryrelationshipObservation.getEffectiveTime());
                                                            EntryrelationshipObservationentryrelationshipObservation.ClassCode = GetVocabInfo(_entryrelationshipObservationentryrelationshipObservation.getClassCode());
                                                            EntryrelationshipObservationentryrelationshipObservation.MoodCode = GetVocabInfo(_entryrelationshipObservationentryrelationshipObservation.getMoodCode());
                
                                                            EntryrelationshipObservationentryrelationship.Observation = EntryrelationshipObservationentryrelationshipObservation;
                                                            }
                                                            EntryrelationshipObservationentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipObservationentryrelationships.getTypeCode());
                                                            EntryrelationshipObservationentryrelationships.push(EntryrelationshipObservationentryrelationship);
                                                    }
                                                }
                                                        entryrelationshipObservation.EntryRelationships = EntryrelationshipObservationentryrelationships;
                                                entryrelationship.Observation = entryrelationshipObservation;
                                            }

                                            var _entryrelationshipEncounter = _entryrelationship.getEncounter();
                                            if(_entryrelationshipEncounter != null) {
                                                var entryrelationshipEncounter = {};
                                                entryrelationshipEncounter.Ids = GetIIList(_entryrelationshipEncounter.getIds());
                                                entryrelationshipEncounter.Code = GetCE(_entryrelationshipEncounter.getCode());
                                                
                                                var _entryrelationshipEncounterentryrelationships = _entryrelationshipEncounter.getEntryRelationships();
                                                var EntryrelationshipEncounterentryrelationships = [];

                                                if (_entryrelationshipEncounterentryrelationships != null) {
                                                    var _entryrelationshipEncounterentryrelationshipsSize = _entryrelationshipEncounterentryrelationships.size();
                                                    var _count = 0;
                                                    for (_count = 0; _count &lt; _entryrelationshipEncounterentryrelationshipsSize; _count++) {
                                                        var EntryrelationshipEncounterentryrelationship = {};
                                                        var _entryrelationshipEncounterentryrelationship = _entryrelationshipEncounterentryrelationships.get(_count);
                                                        var _entryrelationshipEncounterentryrelationshipEncounter = _entryrelationshipEncounterentryrelationship.getEncounter();
                                                        if (_entryrelationshipEncounterentryrelationshipEncounter != null) {
                                                            var EntryrelationshipEncounterentryrelationshipEncounter = {};
                                                            EntryrelationshipEncounterentryrelationshipEncounter.Ids = GetIIList(_entryrelationshipEncounterentryrelationshipEncounter.getIds());
                                                            EntryrelationshipEncounterentryrelationshipEncounter.Values = GetAnyList(_entryrelationshipEncounterentryrelationshipEncounter.getValues());
                                                            EntryrelationshipEncounterentryrelationshipEncounter.ClassCode = GetVocabInfo(_entryrelationshipEncounterentryrelationshipEncounter.getClassCode());
                                                            EntryrelationshipEncounterentryrelationshipEncounter.MoodCode = GetVocabInfo(_entryrelationshipEncounterentryrelationshipEncounter.getMoodCode());
                
                                                            EntryrelationshipEncounterentryrelationship.Encounter = EntryrelationshipEncounterentryrelationshipEncounter;
                                                            }
                                                            EntryrelationshipEncounterentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipEncounterentryrelationships.getTypeCode());
                                                            EntryrelationshipEncounterentryrelationships.push(EntryrelationshipEncounterentryrelationship);
                                                    }
                                                }
                                                        entryrelationshipEncounter.EntryRelationships = EntryrelationshipEncounterentryrelationships;
                                                entryrelationship.Encounter = entryrelationshipEncounter;
                                            }

                                            
                                            var _entryrelationshipAct = _entryrelationship.getAct();
                                            if(_entryrelationshipAct != null) {
                                                var entryrelationshipAct = {};
                                                entryrelationshipAct.Ids = GetIIList(_entryrelationshipAct.getIds());
                                                entryrelationshipAct.Code = GetCE(_entryrelationshipAct.getCode());
                                                entryrelationshipAct.Text = GetED(_entryrelationshipAct.getText());
                                                
                                                var _entryrelationshipActentryrelationships = _entryrelationshipAct.getEntryRelationships();
                                                var EntryrelationshipActentryrelationships = [];

                                                if (_entryrelationshipActentryrelationships != null) {
                                                    var _entryrelationshipActentryrelationshipsSize = _entryrelationshipActentryrelationships.size();
                                                    var _count = 0;
                                                    for (_count = 0; _count &lt; _entryrelationshipActentryrelationshipsSize; _count++) {
                                                        var EntryrelationshipActentryrelationship = {};
                                                        var _entryrelationshipActentryrelationship = _entryrelationshipActentryrelationships.get(_count);
                                                        var _entryrelationshipActentryrelationshipAct = _entryrelationshipActentryrelationship.getAct();
                                                        if (_entryrelationshipActentryrelationshipAct != null) {
                                                            var EntryrelationshipActentryrelationshipAct = {};
                                                            EntryrelationshipActentryrelationshipAct.Ids = GetIIList(_entryrelationshipActentryrelationshipAct.getIds());
                                                            EntryrelationshipActentryrelationshipAct.Text = GetED(_entryrelationshipActentryrelationshipAct.getText());
                                                            EntryrelationshipActentryrelationshipAct.ClassCode = GetVocabInfo(_entryrelationshipActentryrelationshipAct.getClassCode());
                                                            EntryrelationshipActentryrelationshipAct.MoodCode = GetVocabInfo(_entryrelationshipActentryrelationshipAct.getMoodCode());
                
                                                            EntryrelationshipActentryrelationship.Act = EntryrelationshipActentryrelationshipAct;
                                                            }
                                                            EntryrelationshipActentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipActentryrelationships.getTypeCode());
                                                            EntryrelationshipActentryrelationships.push(EntryrelationshipActentryrelationship);
                                                    }
                                                }
                                                        entryrelationshipAct.EntryRelationships = EntryrelationshipActentryrelationships;
                                                entryrelationship.Act = entryrelationshipAct;
                                            }
                                            
                                            var _entryrelationshipsubstanceAdministration = _entryrelationship.getSubstanceAdministration();
                                            if(_entryrelationshipsubstanceAdministration != null) {
                                                var entryrelationshipsubstanceAdministration = {};
                                                entryrelationshipsubstanceAdministration.Ids = GetIIList(_entryrelationshipsubstanceAdministration.getIds());
                                                entryrelationshipsubstanceAdministration.Code = GetCE(_entryrelationshipsubstanceAdministration.getCode());
                                                entryrelationshipsubstanceAdministration.Text = GetED(_entryrelationshipsubstanceAdministration.getText());
                                                
                                                var _entryrelationshipsubstanceAdministrationentryrelationships = _entryrelationshipsubstanceAdministration.getEntryRelationships();
                                                var EntryrelationshipsubstanceAdministrationentryrelationships = [];

                                                    if (_entryrelationshipsubstanceAdministrationentryrelationships != null) {
                                                    var _entryrelationshipsubstanceAdministrationentryrelationshipsSize = _entryrelationshipsubstanceAdministrationentryrelationships.size();
                                                var _count = 0;
                                                        for (_count = 0; _count &lt; _entryrelationshipsubstanceAdministrationentryrelationshipsSize; _count++) {
                                                    var EntryrelationshipsubstanceAdministrationentryrelationship = {};
                                                    var _entryrelationshipsubstanceAdministrationentryrelationship = _entryrelationshipsubstanceAdministrationentryrelationships.get(_count);
                                                    var _entryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration = _entryrelationshipsubstanceAdministrationentryrelationship.getsubstanceAdministration();
                                                    if (_entryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration != null) {
                                                        var EntryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration = {};
                                                        EntryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration.Ids = GetIIList(_entryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration.getIds());
                                                        EntryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration.Code = GetCE(_entryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration.getCode());
                                                        EntryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration.Text = GetED(_entryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration.getText());
                                                                        
                                                        EntryrelationshipsubstanceAdministrationentryrelationship.substanceAdministration = EntryrelationshipsubstanceAdministrationentryrelationshipsubstanceAdministration;
                                                    }
                                                    EntryrelationshipsubstanceAdministrationentryrelationship.TypeCode = GetVocabInfo(_entryrelationshipObservationentryrelationships.getTypeCode());
                                                    EntryrelationshipsubstanceAdministrationentryrelationships.push(EntryrelationshipsubstanceAdministrationentryrelationship);
                                                        }
                                                    }
                                                
                                                    entryrelationshipsubstanceAdministration.EntryRelationships = EntryrelationshipsubstanceAdministrationentryrelationships;
                                                    entryrelationship.substanceAdministration = entryrelationshipsubstanceAdministration;
                                            }

                                            entryrelationship.TypeCode = GetVocabInfo(_entryrelationship.getTypeCode());
                                            entryrelationships.push(entryrelationship);
                                        }
                                    }

                                    procedure.EntryRelationships = entryrelationships;
                    }
                    
                    entry.Procedure = procedure;

                    
                    
                }
            entries.push(entry);
            }   
        } 
    }
    section.Entries = entries;
    
    section.ClassCode=GetVocabInfo(procedureSection.getClassCode());
    section.MoodCode=GetVocabInfo(procedureSection.getMoodCode());
}

channelMap.put(&apos;Proceduressection&apos;,JSON.stringify(section));
procedureSection = null;
_procedureText = null;</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64">PGNsaW5pY2FsRG9jdW1lbnQ+PC9jbGluaWNhbERvY3VtZW50Pg==</outboundTemplate>
      <inboundDataType>HL7V3</inboundDataType>
      <outboundDataType>HL7V3</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3DataTypeProperties" version="3.12.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3SerializationProperties" version="3.12.0">
          <stripNamespaces>false</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3BatchProperties" version="3.12.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3DataTypeProperties" version="3.12.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3SerializationProperties" version="3.12.0">
          <stripNamespaces>false</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3BatchProperties" version="3.12.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.12.0">
      <elements/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.12.0">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.12.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.12.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>none</channelId>
        <channelTemplate>${message.encodedData}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.12.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.12.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>//logger.info(&apos;Procedure Section-&gt;Start:&apos;+DateUtil.getCurrentDate(&apos;yyyyMMddhhmmss&apos;));

if($(&apos;Proceduressection&apos;).length()&gt;2)
{
	ProcedureBundle($(&apos;Proceduressection&apos;),sourceMap.get(&apos;procedureText&apos;),$(&apos;patientid&apos;),sourceMap.get(&apos;bundleid&apos;));
}

channelMap.remove($(&apos;Proceduressection&apos;));

//logger.info(&apos;Procedure Section-&gt;End:&apos;+DateUtil.getCurrentDate(&apos;yyyyMMddhhmmss&apos;));</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V3</inboundDataType>
        <outboundDataType>HL7V3</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3SerializationProperties" version="3.12.0">
            <stripNamespaces>false</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3BatchProperties" version="3.12.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3SerializationProperties" version="3.12.0">
            <stripNamespaces>false</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3BatchProperties" version="3.12.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.12.0">
        <elements/>
        <inboundDataType>HL7V3</inboundDataType>
        <outboundDataType>HL7V3</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3SerializationProperties" version="3.12.0">
            <stripNamespaces>false</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3BatchProperties" version="3.12.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3SerializationProperties" version="3.12.0">
            <stripNamespaces>false</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v3.HL7V3BatchProperties" version="3.12.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.12.0">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data

org.openhealthtools.mdht.uml.cda.ccd.CCDPackage.eINSTANCE.eClass();

return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.12.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>PRODUCTION</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>CMFID</name>
        <type>STRING</type>
        <mappingName>cmfid</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.12.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1671806005676</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <pruningSettings>
        <pruneMetaDataDays>7</pruneMetaDataDays>
        <pruneContentDays>7</pruneContentDays>
        <archiveEnabled>true</archiveEnabled>
        <pruneErroredMessages>false</pruneErroredMessages>
      </pruningSettings>
    </metadata>
  </exportData>
</channel>