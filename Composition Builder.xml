<channel version="3.12.0">
  <id>6485566a-e026-44c1-98cf-f7c62a948022</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>Composition Builder</name>
  <description></description>
  <revision>109</revision>
  <sourceConnector version="3.12.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.jdbc.DatabaseReceiverProperties" version="3.12.0">
      <pluginProperties/>
      <pollConnectorProperties version="3.12.0">
        <pollingType>INTERVAL</pollingType>
        <pollOnStart>false</pollOnStart>
        <pollingFrequency>300000</pollingFrequency>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <cronJobs/>
        <pollConnectorPropertiesAdvanced>
          <weekly>true</weekly>
          <inactiveDays>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
          </inactiveDays>
          <dayOfMonth>1</dayOfMonth>
          <allDay>true</allDay>
          <startingHour>8</startingHour>
          <startingMinute>0</startingMinute>
          <endingHour>17</endingHour>
          <endingMinute>0</endingMinute>
        </pollConnectorPropertiesAdvanced>
      </pollConnectorProperties>
      <sourceConnectorProperties version="3.12.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <driver>com.mysql.cj.jdbc.Driver</driver>
      <url>jdbc:mysql://localhost:3306/genzeon</url>
      <username>root</username>
      <password>test</password>
      <select>SELECT bundleid,requestinfo.requestInfoid	 FROM requestinfo
JOIN sourcedata ON requestinfo.requestinfoId=sourcedata.requestinfoId
JOIN fhirresourcedata ON sourcedata.sourcedataid=fhirresourcedata.sourcedataid
WHERE requestinfo.status=0</select>
      <update>update requestinfo set status=1 where requestInfoid=${requestinfoid};</update>
      <useScript>false</useScript>
      <aggregateResults>false</aggregateResults>
      <cacheResults>true</cacheResults>
      <keepConnectionOpen>true</keepConnectionOpen>
      <updateMode>3</updateMode>
      <retryCount>3</retryCount>
      <retryInterval>10000</retryInterval>
      <fetchSize>1000</fetchSize>
      <encoding>DEFAULT_ENCODING</encoding>
    </properties>
    <transformer version="3.12.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.12.0">
          <sequenceNumber>0</sequenceNumber>
          <enabled>true</enabled>
          <script>importPackage(org.hl7.fhir.r4.model);
importPackage(Packages.ca.uhn.fhir.parser);
var bundle = new org.hl7.fhir.r4.model.Bundle();
var ctx = Packages.ca.uhn.fhir.context.FhirContext.forR4();
var parser = ctx.newJsonParser();  
var errorHandler = new LenientErrorHandler();
errorHandler.setErrorOnInvalidValue(false);
parser.setParserErrorHandler(errorHandler);

var entrylist=[];
bundle.setId(msg[&apos;bundleid&apos;].toString());
bundle.setType(Bundle.BundleType.COLLECTION)

var composition = new org.hl7.fhir.r4.model.Composition();
var patient = new org.hl7.fhir.r4.model.Patient();

        
    

var dbConn;

try 
{
    dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.cj.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/genzeon&apos;,&apos;root&apos;,&apos;test&apos;);

    
    var sql=&quot;SELECT resourcedata FROM requestinfo JOIN sourcedata ON requestinfo.requestinfoId=sourcedata.requestinfoId JOIN fhirresourcedata ON sourcedata.sourcedataid=fhirresourcedata.sourcedataid WHERE resourceType in(&apos;Composition&apos;,&apos;Patient&apos;) and requestinfo.bundleid=&apos;&quot;+msg[&apos;bundleid&apos;].toString()+&quot;&apos;&quot;;
    result = dbConn.executeCachedQuery(sql);
    
    var oResult={};
    while(result.next())
    {
        oResult.ResourceData=result.getString(&quot;resourcedata&quot;);
        if(parser.parseResource(oResult.ResourceData).getResourceType()==&apos;Composition&apos;)
        {
            composition=parser.parseResource(oResult.ResourceData);    
            //logger.info(&apos;Composition Builder-&gt;&apos;+composition);
        }
        else
        {
            patient=parser.parseResource(oResult.ResourceData);    
        }
        
    }

    //Get sections
    var sql=&quot;SELECT COUNT(DISTINCT display) AS sectioncount,CODE,display,codesystem FROM requestinfo JOIN sourcedata ON requestinfo.requestinfoId=sourcedata.requestinfoId JOIN fhirresourcedata ON sourcedata.sourcedataid=fhirresourcedata.sourcedataid JOIN ccdsection ON ccdsection.fhirresourcedataid=fhirresourcedata.fhirresourcedataid WHERE resourceType NOT IN(&apos;Composition&apos;,&apos;Patient&apos;) AND requestinfo.bundleid=&apos;&quot;+msg[&apos;bundleid&apos;].toString()+&quot;&apos; GROUP BY CODE,display,codesystem&quot;;
    var result=dbConn.executeCachedQuery(sql);
    var sectioncount=0;
    var oResult={};
    while(result.next())
    {
        sectioncount=parseInt(result.getString(&quot;sectioncount&quot;));
        oResult.section={};
        oResult.section.Code=result.getString(&quot;CODE&quot;);
        oResult.section.DisplayName=result.getString(&quot;display&quot;);
        oResult.section.CodeSystem=result.getString(&quot;codesystem&quot;);

        for(var _s=0;_s&lt;sectioncount;_s++)
        {
            var section=org.hl7.fhir.r4.model.Composition.SectionComponent();

            section.setTitle(oResult.section.DisplayName);   
            section.setCode(new CodeableConcept().setCoding(GetCodingList(oResult.section)));       
            section.setMode(Composition.SectionMode.SNAPSHOT);

            var sql1=&quot;SELECT resourceId,resourceType,resourcedata FROM requestinfo JOIN sourcedata ON requestinfo.requestinfoId=sourcedata.requestinfoId JOIN fhirresourcedata ON sourcedata.sourcedataid=fhirresourcedata.sourcedataid JOIN ccdsection ON ccdsection.fhirresourcedataid=fhirresourcedata.fhirresourcedataid WHERE resourceType NOT IN(&apos;Composition&apos;,&apos;Patient&apos;) AND requestinfo.bundleid=&apos;&quot;+msg[&apos;bundleid&apos;].toString()+&quot;&apos; and display=&apos;&quot;+oResult.section.DisplayName+&quot;&apos;&quot;;
            result1 = dbConn.executeCachedQuery(sql1);
            
            while(result1.next())
            {
                var entry=new org.hl7.fhir.r4.model.Bundle.BundleEntryComponent();
                logger.info(&apos;Composition Builder-&gt;&apos;+result1.getString(&quot;resourceId&quot;))
                //logger.info(&apos;Composition Builder-&gt;&apos;+parser.parseResource(result1.getString(&quot;resourcedata&quot;)))
                entry.setResource(parser.parseResource(result1.getString(&quot;resourcedata&quot;)));
                entry.setFullUrl(&apos;https://dw-test.genzeon.com/api/&apos;+result1.getString(&quot;resourceType&quot;)+&apos;/&apos;+result1.getString(&quot;resourceId&quot;))
                entrylist.push(entry);
                section.addEntry(new Reference().setReference(result1.getString(&quot;resourceType&quot;)+&apos;/&apos;+result1.getString(&quot;resourceId&quot;)));
            } 
                  
            composition.addSection(section)    
        }
    }


    composition.setId(hex_sha256(JSON.stringify(parser.encodeResourceToString(composition))));

    entrylist.unshift(new org.hl7.fhir.r4.model.Bundle.BundleEntryComponent().setResource(patient).setFullUrl(&apos;https://dw-test.genzeon.com/api/&apos;+patient.getResourceType()+&apos;/&apos;+String(patient.getId()).replace(/Patient\//,&apos;&apos;)));
    entrylist.unshift(new org.hl7.fhir.r4.model.Bundle.BundleEntryComponent().setResource(composition).setFullUrl(&apos;https://dw-test.genzeon.com/api/&apos;+composition.getResourceType()+&apos;/&apos;+composition.getId()));
    
    //Attachment logic
    var attachmentsql=&quot;SELECT AttachmentData,Resourceid AS patientid FROM Attachments a JOIN sourcedata s ON s.RequestInfoId=a.RequestInfoId JOIN fhirresourcedata f ON f.Sourcedataid=s.SourceDataid AND resourceType=&apos;Patient&apos; WHERE a.requestinfoid=&apos;&quot;+msg[&apos;requestInfoid&apos;].toString()+&quot;&apos; ORDER BY f.FHIRResourceDataId DESC LIMIT 1;&quot;
    channelMap.put(&apos;attachmentsql&apos;,attachmentsql);
    var attachmentresult = dbConn.executeCachedQuery(attachmentsql);

    while(attachmentresult.next())
    {
        var attachment=JSON.parse(attachmentresult.getString(&quot;AttachmentData&quot;));
        var patientid=attachmentresult.getString(&quot;patientid&quot;);
    }

    	for(var _a=0;_a&lt;attachment[0].length;_a++)
   	{
   		var entry=new org.hl7.fhir.r4.model.Bundle.BundleEntryComponent();
       	var tempattachment=attachment[0][_a];
       	var tempdoc=DocumentReferenceResource(tempattachment,&apos;Patient/&apos;+patientid);
       	entry.setResource(tempdoc);
       	
       	entry.setFullUrl(&apos;https://dw-test.genzeon.com/api/&apos;+tempdoc.getResourceType()+&apos;/&apos;+tempdoc.getId());
          entrylist.push(entry);
          SavefhirResource(tempdoc,msg[&apos;bundleid&apos;].toString(),null);
       	
    	}
    

    
    bundle.setEntry(entrylist)

	
    
    var updsql=&quot;update fhirresourcedata f JOIN sourcedata s ON s.SourceDataId=f.SourceDataId JOIN requestinfo r ON s.requestinfoid=r.requestinfoid set resourcedata=&apos;&quot;+JSON.parse(JSON.stringify(parser.encodeResourceToString(composition)).replace(/&apos;/g,&quot;\\\\&apos;&quot;))+&quot;&apos;,resourceId=&apos;&quot;+composition.getId()+&quot;&apos; WHERE resourceType=&apos;Composition&apos; and bundleid=&apos;&quot;+msg[&apos;bundleid&apos;].toString()+&quot;&apos;&quot;;
    var result = dbConn.executeUpdateAndGetGeneratedKeys(updsql);

   var inssql=&quot;UPDATE sourcedata s JOIN requestinfo r ON s.requestinfoid=r.requestinfoid SET FHIRBundleData=&apos;&quot;+JSON.parse(JSON.stringify(parser.encodeResourceToString(bundle)).replace(/&apos;/g,&quot;\\\\&apos;&quot;))+&quot;&apos; WHERE bundleid=&apos;&quot;+msg[&apos;bundleid&apos;].toString()+&quot;&apos;&quot;;
    var result = dbConn.executeUpdateAndGetGeneratedKeys(inssql);
}
finally 
{
    if (dbConn) 
    { 
        dbConn.close();
    }
}
        
channelMap.put(&apos;Bundle&apos;,parser.encodeResourceToString(bundle));</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8cmVzdWx0Pg0KICAgIDxidW5kbGVpZD52YWx1ZTwvYnVuZGxlaWQ+DQogICAgPHJlcXVlc3RpbmZvaWQ+dmFsdWU8L3JlcXVlc3RpbmZvaWQ+DQo8L3Jlc3VsdD4NCg==</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>XML</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.12.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.12.0">
          <stripNamespaces>false</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.12.0">
          <splitType>Element_Name</splitType>
          <elementName></elementName>
          <level>1</level>
          <query></query>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.12.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.12.0">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>false</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.12.0">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.12.0">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.12.0">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.12.0">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.12.0">
      <elements/>
    </filter>
    <transportName>Database Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.12.0">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.12.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.12.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <channelId>none</channelId>
        <channelTemplate>${message.encodedData}</channelTemplate>
        <mapVariables/>
      </properties>
      <transformer version="3.12.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.12.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>false</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.12.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.12.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.12.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.12.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.12.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>false</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.12.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.12.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.12.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.12.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.12.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.12.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>false</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.12.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.12.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.12.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.12.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.12.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.12.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>false</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.12.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.12.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.12.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.12.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.12.0">
        <elements/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.12.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>true</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.12.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1671804908006</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
        <pruneErroredMessages>false</pruneErroredMessages>
      </pruningSettings>
    </metadata>
  </exportData>
</channel>